//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by BLToolkit template for T4.
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Text;

using BLToolkit.Data;
using BLToolkit.Data.DataProvider;
using BLToolkit.Data.Linq;
using BLToolkit.Data.Sql;
using BLToolkit.Data.Sql.SqlProvider;
using BLToolkit.DataAccess;
using BLToolkit.Mapping;

using Medical.DatabaseCore.Services.Database;

namespace DataModel
{
    public partial class TortillaContext : DatabaseContext
    {
        public TortillaContext(string provider, string config) : base(provider, config) { }
        public Table<IN1> IN1 { get { return this.GetTable<IN1>(); } }
        public Table<QR> QR { get { return this.GetTable<QR>(); } }
        public Table<RSP_ZK1msg> RSP_ZK1msg { get { return this.GetTable<RSP_ZK1msg>(); } }
        public Table<ZP1errors> ZP1errors { get { return this.GetTable<ZP1errors>(); } }
        public Table<ZP1msg> ZP1msg { get { return this.GetTable<ZP1msg>(); } }

        #region FreeTextTable

        public class FreeTextKey<T>
        {
            public T Key;
            public int Rank;
        }

        class FreeTextTableExpressionAttribute : TableExpressionAttribute
        {
            public FreeTextTableExpressionAttribute()
                : base("")
            {
            }

            public override void SetTable(SqlTable table, MemberInfo member, IEnumerable<Expression> expArgs, IEnumerable<ISqlExpression> sqlArgs)
            {
                var aargs = sqlArgs.ToArray();
                var arr = ConvertArgs(member, aargs).ToList();
                var method = (MethodInfo)member;
                var sp = new MsSql2008SqlProvider();

                {
                    var ttype = method.GetGenericArguments()[0];
                    var tbl = new SqlTable(ttype);

                    var database = tbl.Database == null ? null : sp.Convert(tbl.Database, ConvertType.NameToDatabase).ToString();
                    var owner = tbl.Owner == null ? null : sp.Convert(tbl.Owner, ConvertType.NameToOwner).ToString();
                    var physicalName = tbl.PhysicalName == null ? null : sp.Convert(tbl.PhysicalName, ConvertType.NameToQueryTable).ToString();

                    var name = sp.BuildTableName(new StringBuilder(), database, owner, physicalName);

                    arr.Add(new SqlExpression(name.ToString(), Precedence.Primary));
                }

                {
                    var field = ((ConstantExpression)expArgs.First()).Value;

                    if (field is string)
                    {
                        arr[0] = new SqlExpression(field.ToString(), Precedence.Primary);
                    }
                    else if (field is LambdaExpression)
                    {
                        var body = ((LambdaExpression)field).Body;

                        if (body is MemberExpression)
                        {
                            var name = ((MemberExpression)body).Member.Name;

                            name = sp.Convert(name, ConvertType.NameToQueryField).ToString();

                            arr[0] = new SqlExpression(name, Precedence.Primary);
                        }
                    }
                }

                table.SqlTableType = SqlTableType.Expression;
                table.Name = "FREETEXTTABLE({6}, {2}, {3}) {1}";
                table.TableArguments = arr.ToArray();
            }
        }

        [FreeTextTableExpressionAttribute]
        public Table<FreeTextKey<TKey>> FreeTextTable<TTable, TKey>(string field, string text)
        {
            return this.GetTable<FreeTextKey<TKey>>(
                this,
                ((MethodInfo)(MethodBase.GetCurrentMethod())).MakeGenericMethod(typeof(TTable), typeof(TKey)),
                field,
                text);
        }

        [FreeTextTableExpressionAttribute]
        public Table<FreeTextKey<TKey>> FreeTextTable<TTable, TKey>(Expression<Func<TTable, string>> fieldSelector, string text)
        {
            return this.GetTable<FreeTextKey<TKey>>(
                this,
                ((MethodInfo)(MethodBase.GetCurrentMethod())).MakeGenericMethod(typeof(TTable), typeof(TKey)),
                fieldSelector,
                text);
        }

        #endregion
    }

    [TableName(Name = "IN1")]
    public partial class IN1 : BaseEntity
    {
        [Identity, PrimaryKey(1)]
        public int id { get; set; } // int(10)
        [Nullable]
        public int? QRid { get; set; } // int(10)
        [Nullable]
        public string smo_ogrn { get; set; } // varchar(30)
        [Nullable]
        public string tfoms_ogrn { get; set; } // varchar(30)
        [Nullable]
        public string date_beg { get; set; } // varchar(30)
        [Nullable]
        public string date_end { get; set; } // varchar(30)
        [Nullable]
        public string terr_code { get; set; } // varchar(10)
        [Nullable]
        public string instype { get; set; } // varchar(5)
        [Nullable]
        public string inssernum { get; set; } // varchar(100)

    }

    [TableName(Name = "QR")]
    public partial class QR : BaseEntity
    {
        [Identity, PrimaryKey(1)]
        public int id { get; set; } // int(10)
        [Nullable]
        public int? rsp_zk1id { get; set; } // int(10)
        [Nullable]
        public string terr_code { get; set; } // varchar(10)
        [Nullable]
        public string enp { get; set; } // varchar(16)
        [Nullable]
        public string main_enp { get; set; } // varchar(16)

    }

    [TableName(Name = "RSP_ZK1msg")]
    public partial class RSP_ZK1msg : BaseEntity
    {
        [Identity, PrimaryKey(1)]
        public int id { get; set; } // int(10)
        [Nullable]
        public string guid { get; set; } // varchar(50)
        [Nullable]
        public string initial_guid { get; set; } // varchar(50)
        [Nullable]
        public string pack_guid { get; set; } // varchar(50)
        [Nullable]
        public string ack_code { get; set; } // varchar(10)

    }

    [TableName(Name = "ZP1errors")]
    public partial class ZP1errors : BaseEntity
    {
        [Identity, PrimaryKey(1)]
        public int id { get; set; } // int(10)
        [Nullable]
        public int? rsp_zk1_id { get; set; } // int(10)
        [Nullable]
        public string rsp_zk1_guid { get; set; } // varchar(50)
        [Nullable]
        public string initial_guid { get; set; } // varchar(50)
        [Nullable]
        public DateTime? prc_date { get; set; } // datetime(3)
        [Nullable]
        public string position { get; set; } // varchar(512)
        [Nullable]
        public string iso_err_code { get; set; } // varchar(20)
        [Nullable]
        public string iso_err_descr { get; set; } // varchar(8000)
        [Nullable]
        public string app_err_code { get; set; } // varchar(20)
        [Nullable]
        public string app_err_descr { get; set; } // varchar(8000)

    }

    [TableName(Name = "ZP1msg")]
    public partial class ZP1msg : BaseEntity
    {
        [Identity, PrimaryKey(1)]
        public int id { get; set; } // int(10)
        [Nullable]
        public string guid { get; set; } // varchar(50)
        [Nullable]
        public string pack_guid { get; set; } // varchar(50)
        [Nullable]
        public string enp { get; set; } // varchar(16)
        [Nullable]
        public string passp { get; set; } // varchar(20)
        [Nullable]
        public string pen { get; set; } // varchar(20)
        [Nullable]
        public string fam { get; set; } // varchar(100)
        [Nullable]
        public string im { get; set; } // varchar(100)
        [Nullable]
        public string ot { get; set; } // varchar(100)
        [Nullable]
        public string dr { get; set; } // varchar(20)
        [Nullable]
        public string sex { get; set; } // varchar(1)
        [Nullable]
        public string instype { get; set; } // varchar(5)
        [Nullable]
        public string inssernum { get; set; } // varchar(20)
        [Nullable]
        public string dultype { get; set; } // varchar(10)
        [Nullable]
        public string dulsernum { get; set; } // varchar(100)
        [Nullable]
        public DateTime? form_date { get; set; } // datetime(3)

    }
}
